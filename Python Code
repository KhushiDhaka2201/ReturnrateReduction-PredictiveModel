import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Load Data
df = pd.read_csv('returns_data.csv')

# Preprocessing
df['ReturnFlag'] = df['ReturnFlag'].fillna(0)
df['Rating'] = df['Rating'].fillna(df['Rating'].mean())

# Encode Category as dummy variables
df = pd.get_dummies(df, columns=['Category'], drop_first=True)

# Features and Target
features = ['Price', 'Rating'] + [col for col in df.columns if col.startswith('Category_')]
X = df[features]
y = df['ReturnFlag']

# Split and Train
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Add risk score to data
df['ReturnRiskScore'] = model.predict_proba(X)[:,1]
df.to_csv('returns_with_risk.csv', index=False)
